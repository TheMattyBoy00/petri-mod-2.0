// Date: 6/6/17 16:37:45
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX
package erikalebenjamattias.petrimod.client.model;

import net.minecraft.client.model.ModelBiped;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.math.MathHelper;

public class ModelMehmet extends ModelBiped {
	
	public ModelRenderer neck;
    public ModelRenderer head;

	public ModelMehmet() {
		this(0);
	}
	
	public ModelMehmet(float size) {
		super(size);
		textureWidth = 64;
		textureHeight = 32;

		neck = new ModelRenderer(this, 32, 0);
		neck.addBox(-2F, -2F, -4F, 4, 2, 4);
		neck.setRotationPoint(0F, 0F, 2F);
		neck.setTextureSize(64, 32);
		neck.mirror = true;
		setRotation(neck, 0.3926991F, 0F, 0F);

	    head = new ModelRenderer(this, 0, 0);
	    head.addBox(-4F, -8F, -3F, 8, 8, 8);
	    head.setRotationPoint(0F, -2F, -4F);
	    head.setTextureSize(64, 32);
	    head.mirror = true;
	    setRotation(head, -0.3926991F, 0F, 0F);
	    
	    neck.addChild(head);

	    //bipedHead.setRotationPoint(0F, -0.3F, -1.5F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		//super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		neck.render(f5);
		//bipedHead.render(f5);
		bipedBody.render(f5);
		bipedRightArm.render(f5);
		bipedLeftArm.render(f5);
		bipedRightLeg.render(f5);
		bipedLeftLeg.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch, float scaleFactor, Entity entity) {
		super.setRotationAngles(limbSwing, limbSwingAmount, ageInTicks, netHeadYaw, headPitch, scaleFactor, entity);
		neck.rotateAngleX = MathHelper.cos(ageInTicks * 0.09F) * 0.2F * -0.2F + 0.3926991F;
		head.rotateAngleX = -MathHelper.cos(ageInTicks * 0.09F + (float)Math.PI / 5) * 0.2F * -0.2F + bipedHead.rotateAngleX - 0.3926991F;
		head.rotateAngleY = bipedHead.rotateAngleY;
		head.rotateAngleZ = bipedHead.rotateAngleZ - netHeadYaw * 0.017453292F * 0.3926991F;
	}

}
